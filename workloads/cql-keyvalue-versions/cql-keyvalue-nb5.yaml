description: A workload with only text keys and text values

scenarios:
  default:
    schema: run driver=cql tags==block:schema threads==1 cycles==UNDEF
    rampup: run driver=cql tags==block:rampup cycles===TEMPLATE(rampup-cycles,10000000) threads=auto
    main: run driver=cql tags==block:main cycles===TEMPLATE(main-cycles,10000000) threads=auto
  astra:
    schema: run driver=cql tags==block:schema-astra threads==1 cycles==UNDEF
    rampup: run driver=cql tags==block:rampup cycles===TEMPLATE(rampup-cycles,10000000) threads=auto
    main: run driver=cql tags==block:main cycles===TEMPLATE(main-cycles,10000000) threads=auto

bindings:
  seq_key: Mod(<<keycount:1000000000>>); ToString() -> String
  seq_value: Hash(); Mod(<<valuecount:1000000000>>); ToString() -> String
  rw_key: <<keydist:Uniform(0,1000000000)->int>>; ToString() -> String
  rw_value: Hash(); <<valdist:Uniform(0,1000000000)->int>>; ToString() -> String

blocks:
  schema:
    ops:
      create-keyspace: 
        op:
          stmt: |
            create keyspace if not exists <<keyspace:baselines>>
            WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '<<rf:1>>'}
            AND durable_writes = true;
      create-table:
        op:
          stmt: |
            create table if not exists <<keyspace:baselines>>.<<table:keyvalue>> (
            key text,
             value text,
             PRIMARY KEY (key)
            );
  schema-astra:
    ops:
      create-table:
        op:
          stmt: |
            create table if not exists <<keyspace:baselines>>.<<table:keyvalue>> (
            key text,
              value text,
              PRIMARY KEY (key)
            );
  rampup:
    ops:
      rampup-insert: 
        op:
          stmt: |
            insert into <<keyspace:baselines>>.<<table:keyvalue>>
            (key, value)
            values ({seq_key},{seq_value});
        params:
          prepared: true
          cl: <<write_cl:LOCAL_QUORUM>>
  verify:
    ops:
      verify-select:
        op:
          stmt: |
            select * from <<keyspace:baselines>>.<<table:keyvalue>> where key={seq_key};
        params:
          prepared: true
          cl: <<write_cl:LOCAL_QUORUM>>
          verify-fields: key->seq_key, value->seq_value
  main:
    ops:
      main-read:
        op:
          stmt: |
            select * from <<keyspace:baselines>>.<<table:keyvalue>> where key={rw_key};
        params:
          prepared: true
          ratio: 5
          cl: <<read_cl:LOCAL_QUORUM>>
      main-write:
        op:
          stmt: |
            insert into <<keyspace:baselines>>.<<table:keyvalue>>
            (key, value) values ({rw_key}, {rw_value});
        params:
          prepared: true
          ratio: 5
          cl: <<write_cl:LOCAL_QUORUM>>
