scenarios:
  default:
    schema: run driver=stdout tags==block:schema threads==1 cycles==UNDEF
    rampup: run driver=stdout tags==block:rampup cycles===TEMPLATE(rampup-cycles,5) threads=1
    main: run driver=stdout tags==block:main cycles===TEMPLATE(main-cycles,15) threads=1
    conclusion: run driver=stdout tags==block:conclusion cycles===UNDEF threads=1
bindings:
  animal: AddHashRange(19); CSVFrequencySampler('animals.csv','animal')
  animal2: AddHashRange(23); CSVFrequencySampler('animals.csv','animal')
  adjective: AddHashRange(43); CSVFrequencySampler('animals.csv','adjective')
  bodypart: AddHashRange(101); CSVFrequencySampler('animals.csv','bodypart')
  speechduration: AddHashRange(20); Clamp(2,9); Mul(100)
blocks:
  schema:
    ops: 
      introduction: "(schema)     A meeting was called in the Republic of Animals.\n"
      gathering: "(schema)     One by one, all animals started to show up:\n"
  rampup:
    ops:
      participant-arrival: "(rampup)     The {adjective} {animal} did show up ...\n"
  main:
    ops:
      participant-speaking:
        stmt: "(main)       The {adjective} {animal} spoke {speechduration} seconds\n"
        params:
          ratio: <<speak_ratio:3>>
      participant-acting:
        stmt: "(main)       But then {animal} kicked the {adjective} {animal2}'s {bodypart}!\n"
        params:
          ratio: <<act_ratio:1>>
      participant-arrival:
        stmt: "(main)       In the midst of the meeting, the {adjective} {animal} appeared!\n"
        params:
          ratio: 1
  conclusion:
    ops:
      end-of-story: "(conclusion)      ... And so, in chaos, the meeting did end up.\n"

